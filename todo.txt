STEP 1 - SETUP
Create two .env files x
add the db names x
git ignore env files x

read setup.sql x

STEP 2 - SEEDING
create table for topics inc. slug and description fields x

create table for users inc. username, avatar url and name x

create table for articles inc. article id, title, body, votes, topic (ref to slug in topics), author (ref to username), created_at, DEPENDENT ON TOPICS AND USERS x

create table for comments inc comment id, author (ref to username), article id (ref to article id), votes, created at, body, DEPENDENT ON TOPICS AND USERS x

seed data into topics x

seed data into users x
 
seed data into articles x

seed data into table x

STEP 3 - ENDPOINTS

GET /api/topics 
- happy path TDD (200, returns an array of all topics) x
- 404 not found x 
- 500 internal server error x

GET /api/articles/:article_id
 - happy path (returns 200 and the article with the id with author(username form users table), title x
 - 400 bad request (not the right format e.g. string) x
 - 404 not found (id a number but does not exist e.g. 800) x

 PATCH /api/articles/:article_id
 - happy path (accepts an object in the form  `{ inc_votes: newVote }`, amend the amount of votes by the newVote info in the given article id, return updated article) x
 - work with negative values too x
 -  400 bad request for wrong format input, when not passed an obj x
 - 400 bad request when passed the wrong value type in the obj (e.g. { inc_votes: 'invalid' }) x
 
 GET /api/articles
 - happy path returns 200 and an array of article objects with the properties author(username from users), title, article_id, topic, created_at, votes, comment_count x
 - happy path status 200, accepts sort by query which defaults to date, returns obj as above, but sorted by passed param. x
 - accepts other params x
 - happy path status 200, allows user to order whether asc or desc, defaulting to desc x
 - happy path status 200, allow user to filter the article by the topic value specified in the query x
 - 400 returns bad request when passed a sort by query which does not exist 
 - 400 returns bad request when asked to order by something which isnt asc/desc
 - 404 returns no such path when topic value doesn't exist
 - returns 404 no such path when there are no articles of the given topic

GET /api/articles/:article_id/comments 
- happy path returns 200 and returns an array of comments for the given article id, with the properties comment id, votes, created at, author and body
- 400 bad request when the id does not meet criteria, e.g. is a string 
- 404 no such path when the article has no comments
- 404 no such path when passed a valid number but there are no articles for that number, e.g. 208897
